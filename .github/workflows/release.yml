name: Release

on:
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - 'medium_converter/__init__.py'  # Only trigger on version changes
  workflow_dispatch:
    # Allow manual triggering

jobs:
  semantic-release:
    uses: ./.github/workflows/semver.yml
    permissions:
      contents: write
      id-token: write
    secrets:
      DEP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      
  create-tag-release:
    needs: semantic-release
    if: needs.semantic-release.outputs.published == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release
      
      - name: Update CHANGELOG.md
        run: |
          VERSION="${{ needs.semantic-release.outputs.version }}"
          python -m semantic_release changelog > CHANGELOG.tmp
          
          # Insert new content after the header line
          awk 'NR==1{print; print ""; getline < "CHANGELOG.tmp"; while(getline < "CHANGELOG.tmp") print; next}1' CHANGELOG.md > CHANGELOG.new
          mv CHANGELOG.new CHANGELOG.md
          
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG.md for v${VERSION} [skip ci]"
          
      - name: Create tag and GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ needs.semantic-release.outputs.version }}"
          TAG="v$VERSION"
          
          echo "Creating tag $TAG for version $VERSION"
          git tag -a $TAG -m "Release $TAG"
          git push origin $TAG
          
          # Extract the latest changelog entry for the release notes
          awk '/^## / {if (p) exit; p=1} p' CHANGELOG.md > RELEASE_NOTES.md
          
          # Create GitHub release
          gh release create $TAG \
            --title "Release $TAG" \
            --notes-file RELEASE_NOTES.md

  publish:
    needs: semantic-release
    if: needs.semantic-release.outputs.published == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.semantic-release.outputs.git-ref }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry build
          
      - name: Build package
        run: |
          poetry build
          
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          
  deploy-docs:
    needs: semantic-release
    if: needs.semantic-release.outputs.published == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.semantic-release.outputs.git-ref }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with docs
          
      - name: Build documentation
        run: |
          poetry run mkdocs build
          
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site